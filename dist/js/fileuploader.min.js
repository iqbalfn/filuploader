/*!
  * File Uploader v0.1.0 (https://iqbalfn.github.io/fileuploader/)
  * Copyright 2020 Iqbal Fauzi
  * Licensed under MIT (https://github.com/iqbalfn/fileuploader/blob/master/LICENSE)
  */
!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports):"function"==typeof define&&define.amd?define(["exports"],n):n((e=e||self).fileuploader={})}(this,function(e){"use strict";var n=function(){function e(e){if(this._queries=e.queries||{},this._fields=e.fields||{},this._files=e.files||{},this._headers=e.headers||{},this._url=e.url,this._response=null,this._xhr=null,this._chunks=null,!Object.keys(this._files).length)throw"No file provided";this._registerEvents(e),this._buildUrl(),this._parseChunkOption(e)}var n=e.prototype;return n.onChankUploaded=function(e,n,t,s){s(!0)},n.onComplete=function(){},n.onError=function(){},n.onProgress=function(){},n.onStart=function(){},n.onSuccess=function(){},n.getResponse=function(){return this._response},n.send=function(){var n=this;if(!this._chunks)return this._sendSingle();this._chunks.options.before(this,function(e){n._sendChunks()})},n.addField=function(e,n){this._fields[e]=n},n.addFile=function(e,n){this._files[e]=n},n.addHeader=function(e,n){this._headers[e]=n},n.addQuery=function(e,n){this._queries[e]=n},n.setUrl=function(e){this._url=e},n.getUrl=function(){return this._url},n.getField=function(e){return this._fields[e]},n.getFields=function(){return this._fields},n.getFile=function(e){return this._files[e]},n.getFiles=function(){return this._files},n.getHeader=function(e){return this._headers[e]},n.getHeaders=function(){return this._headers},n.getQuery=function(e){return this._queries[e]},n.getQueries=function(){return this._queries},n._buildUrl=function(){var e,n=[],t=this._url.includes("?")?"&":"?";for(e in this._queries)n.push(this._qs(e)+"="+this._qs(this._queries[e]));n.length&&(this._url+=t+n)},n._parseChunkOption=function(e){if(e.chunks){var n,t,s=null,i={},r=!1,o={chunkSize:2e5,minSize:5e5,after:function(e,n,t){t(n)},before:function(e,n){n(!0)},test:function(){return!0}};for(n in o)i[n]=e.chunks[n]||o[n];for(t in this._files){if(!((s=this._files[t]).size<i.minSize))if(i.test(this,s,i)){r=!0;break}}if(r&&1<Object.keys(this._files).length)throw"Multiple file is not supported for chunk upload";this._chunks={chunk:0,chunks:Math.ceil(s.size/i.chunkSize),options:i}}},n._qs=function(e){return encodeURIComponent(e)},n._registerEvents=function(n){var t=this;["onChankUploaded","onComplete","onError","onProgress","onSuccess","onStart"].forEach(function(e){n[e]&&(t[e]=n[e])})},n._sendSingle=function(){var t=this;this.onStart(this),this._upload(this._files,this._fields,function(e,n){return t.onProgress(t,100),t.onComplete(t,t._xhr),e?t.onError(t,t._xhr):void t.onSuccess(t,t._xhr,n)})},n._sendChunks=function(){var e,n,t,s=this;for(t in this._files)e=this._files[t],n=t;var i=this._chunks.chunk+1,r=this._chunks,o=r.options;r.chunk&&this.onStart(this);var u=r.chunk*o.chunkSize,h=u+o.chunkSize;h>e.size&&(h=e.size);var c,f=e.slice(u,h);if(!f.size){this.onComplete(this,this._xhr);try{c=JSON.parse(this._response)}catch(e){c=this._response}return this._chunks.options.after(this,c,function(e){s.onSuccess(s,s._xhr,e)})}var l=this._fields;l.chunk=this._chunks.chunk,l.chunks=this._chunks.chunks;var _=Math.round(i/this._chunks.chunks*100),a={};a[n]=f,this._chunks.chunk=i,this._upload(a,l,function(e,n){return s.onProgress(s,_),e?s.onError(s,s._xhr):void s.onChankUploaded(s,s._xhr,n,function(e){return!0===e?setTimeout(function(){return s._sendChunks()},100):s.onError(s,s._xhr)})})},n._upload=function(e,n,t){var s,i,r=this,o=new FormData,u=new XMLHttpRequest;for(s in this._xhr=u,n)o.append(s,n[s]);for(i in e)o.append(i,e[i],e[i].name);u.open("POST",this._url,!0),u.onreadystatechange=function(e){if(4==u.readyState){if(r._response=u.responseText,200!=u.status)return t(u.status,"Invalid server response");var n=null;try{n=JSON.parse(u.responseText)}catch(e){n=u.responseText}t(0,n)}},u.send(o)},e}();window.FileUploader=n,e.FileUploader=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=fileuploader.min.js.map